type Query {
    employees: [Employee]
    employee(id: Int!, department:Int): Employee
}
type Mutation {
    createEmployee(createEmployee: CreateEmployee): Employee
}

input CreateEmployee {
    fName: String
    lName: String
    email: String
    age: Int
    salary: Float
}

type Employee {
    id: Int
    personalDetails: PersonalDetails
    department: Department
    address: Address
}

type Address {
    addressLine1:String
    addressLine2:String
    city:String
    pinCOde:String
    state:String
    country:String
}

type  Department {
    id: Int
    name: String
    manager: String
}
type PersonalDetails {
    fName:String
    lName:String
    dob:String
    mobile:String
    father:String
    email:String
    age:Int
}

input Filter {
    field: String
    value: String
}